use college;

CREATE TABLE Customers (
  CustomerID INT PRIMARY KEY,
  Name VARCHAR(100),
  Age INT,
  Balance DECIMAL(10, 2),
  InterestRate DECIMAL(5, 2),
  IsVIP VARCHAR(5)
);

CREATE TABLE Loans (
  LoanID INT PRIMARY KEY,
  CustomerID INT,
  DueDate DATE,
  FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

INSERT INTO Customers VALUES (1, 'pratyush kumar dash', 65, 15000.00, 8.5, 'FALSE');
INSERT INTO Customers VALUES (2, 'kanan moharana', 45, 9000.00, 9.0, 'FALSE');
INSERT INTO Customers VALUES (3, 'sushma', 70, 5000.00, 10.0, 'FALSE');

INSERT INTO Loans VALUES (101, 1, CURDATE() + INTERVAL 10 DAY);
INSERT INTO Loans VALUES (102, 2, CURDATE() + INTERVAL 40 DAY);
INSERT INTO Loans VALUES (103, 3, CURDATE() + INTERVAL 5 DAY);

DELIMITER //

CREATE PROCEDURE ProcessCustomers()
BEGIN
  -- Declare variables and cursor first (at the top!)
  DECLARE done INT DEFAULT 0;
  DECLARE cid INT;
  DECLARE lid INT;
  DECLARE ddate DATE;
  DECLARE cname VARCHAR(100);

  DECLARE cur CURSOR FOR
    SELECT l.CustomerID, l.LoanID, l.DueDate, c.Name
    FROM Loans l
    JOIN Customers c ON l.CustomerID = c.CustomerID
    WHERE l.DueDate BETWEEN CURDATE() AND CURDATE() + INTERVAL 30 DAY;

  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

  -- 1. Apply 1% interest discount for seniors
  UPDATE Customers
  SET InterestRate = InterestRate - 1
  WHERE Age > 60;

  -- 2. Promote to VIP based on balance
  UPDATE Customers
  SET IsVIP = 'TRUE'
  WHERE Balance > 10000;

  -- 3. Print loan reminders due in next 30 days
  OPEN cur;

  read_loop: LOOP
    FETCH cur INTO cid, lid, ddate, cname;
    IF done THEN
      LEAVE read_loop;
    END IF;
    SELECT CONCAT('Reminder: Dear ', cname, 
                  ', your loan (ID: ', lid, 
                  ') is due on ', DATE_FORMAT(ddate, '%d-%b-%Y')) AS Reminder;
  END LOOP;

  CLOSE cur;
END;
//

DELIMITER ;

SELECT * FROM Customers;

SELECT CONCAT('Reminder: Dear ', c.Name, 
              ', your loan (ID: ', l.LoanID, 
              ') is due on ', DATE_FORMAT(l.DueDate, '%d-%b-%Y')) AS Reminder
FROM Loans l
JOIN Customers c ON l.CustomerID = c.CustomerID
WHERE l.DueDate BETWEEN CURDATE() AND CURDATE() + INTERVAL 30 DAY;


